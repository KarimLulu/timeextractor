CustomTimeEvent = { type: "CLASS", value: "com.codeminders.labs.timeextractor.sutime.CustomTimeEvent" }
BetweenTimeEvent = { type: "CLASS", value: "com.codeminders.labs.timeextractor.sutime.BetweenTimeEvent" }
 
   TIME_OF_DAY_MAP = {
    "morning": "morning",
    "afternoon": "afternoon",
    "evening": "evening",
    "night":" night",
    "noon": "noon",
    "midnight": "midnight"
  }
$TIME_OF_DAY = CreateRegex(Keys(TIME_OF_DAY_MAP))
  
DAYOFWEEK_MAP = {
   "monday": "monday",
    "tuesday": "tuesday",
    "wednesday": "wednesday",
    "thursday":" thursday",
    "friday":" friday",  
    "saturday": "saturday",
    "sunday": "sunday"
  }
  
MONTH_OF_YEAR_MAP = {
   "january": "january",
    "february": "february",
    "march": "march",
    "april":" april",
    "may":" may",  
    "june": "june",
    "july": "july",
    "august": "august",
    "september": "september",
    "october": "october",
    "november": "november",
    "december": "december"
  }
  
$DAY_OF_WEEK = CreateRegex(Keys(DAYOFWEEK_MAP))  
$MONTH_OF_YEAR = CreateRegex(Keys(MONTH_OF_YEAR_MAP))
$PM_AM_TIME = "[0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?[\s-]?([0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?)?"
 
  // between morning and evening
  // between morning and 12h
  {
   ruleType: "text",
   pattern: /(between)[\s*]($TIME_OF_DAY|$DAY_OF_WEEK|([0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?[\s-]?(to)?([0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?)?))[\s*](and)[\s*]($TIME_OF_DAY|$DAY_OF_WEEK|([0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?[\s-]?([0-9][\s]?([p,P]?[m,M])?(|[a,A][m,M])?)?))/ ,
   result: CustomTimeEvent($0)
  }
  
  
 // between 11:30 and 12h
 // between 11:30 and 12:00
 // between 11h and 14h
 {
    ruleType: "text",
   pattern: /(between)(([\s*]([01]?[0-9]|2[0-3])[:.,][0-5][0-9][\s*])|([\s*][0-2][0-9][\s]?h?[\s]?) )(and)([\s*]([01]?[0-9]|2[0-3])[:.,][0-5][0-9]|([\s*][0-2][0-9][\s]?h?[\s]?))/ ,
   result: BetweenTimeEvent($0)
  }
  
 
 // until January...
  
  {  ruleType: "text", 
     pattern: /until ($MONTH_OF_YEAR)/,
     result: CustomTimeEvent("UNTIL MONTH") 
  } 
  
 // until Monday...
    
  {  ruleType: "text", 
     pattern: /until ($DAY_OF_WEEK)/,
     result: CustomTimeEvent("UNTIL DAY OF WEEK") 
  } 
  	  	
 {
   ruleType: "text",
   pattern: /(a|the)?[\s]?(week day|weekday)/,
   result: CustomTimeEvent("DATE") 
  }
  
 {
   ruleType: "text",
   pattern: /(lunch time)/,
   result: CustomTimeEvent("TIME") 
  }
  
   {
   ruleType: "text",
   pattern: /(after l?ch)/,
   result: CustomTimeEvent("TIME") 
  }
  
 //every 
  {
   ruleType: "text",
   pattern: /everyday|everymonth|everyyear|every year|every day|every month|each month|each day|each year/ ,
   result: CustomTimeEvent("EVERY") 
  }
  
    //through/thru month
	         
   { 
    ruleType: "text",
	priority: 1,
	pattern: /(through|thru)[\s]($MONTH_OF_YEAR)([\s]?)([0-3][0-1][-][0-3][0-1])?[\s]?(^\d{4})?[\s]?($DAY_OF_WEEK)?[\s]?/,
	result: CustomTimeEvent("THROUGH TIME") 
	}
	 
	//mid or mid-late month
	{ 
    ruleType: "text",  
    priority: 1,
	pattern: /(mid|mid-late)[-\s]?($MONTH_OF_YEAR)/ ,
	result: CustomTimeEvent("SET") 
	}
	 
	{ 
    ruleType: "text",
	pattern: / (before|until)[\s](mid|mid-late)[-\s]?($MONTH_OF_YEAR)/ ,
	result: CustomTimeEvent("BEFORE SET") 
	}

	{ 
    ruleType: "text",
	pattern: /([0-9][0-9]?[0-9]?[-][0-9][0-9]?[0-9]?[\s]?(minutes|min|mins))/,
	result: CustomTimeEvent("PERIOD_TIME") 
	}
	
	//from .. until..
	{ 
    ruleType: "text",
	pattern: /(from)[\s]?( ([0-5][0-9][\s]?([p,P][m,M])?([a,A][m,M])?)|([0-2][0-9]h?) )[\s]?(until|to)[\s]?( ([0-5][0-9][\s]?([p,P][m,M])?([a,A][m,M])?)|([0-2][0-9]h?) )/,
	result: CustomTimeEvent("PERIOD_TIME") 
	}
	
  //10.11pm
   {
   ruleType: "text",
   priority:2,
   pattern: /([01]?[0-9]|2[0-3])[:.,][0-5][0-9][\s]?(([p,P][m,M])|([a,A][m,M]))/ ,
   result: CustomTimeEvent("TIME") 
  }
      
  // july 25 - june 26
  {
   ruleType: "text",
   pattern: /($MONTH_OF_YEAR)[\s]?[0-3][0-9][\s]?[-;:][\s]?($MONTH_OF_YEAR)[\s]?[0-3][0-9]?/,
   result: CustomTimeEvent("PERIOD_TIME") 
  }
  
   //the Nth day of the month
  
  {
   ruleType: "text",
   pattern: /(the)[\s]?[0-9][0-9]?[\s]?(th|rd)[\s]?(Sun|Mon|Tue|Wed|Thu|Fri|Sat|Sun|($DAY_OF_WEEK))/,
   result: CustomTimeEvent("DAY") 
  }
  
  // 13/03/2014
  
  { ruleType: "text", pattern: /(0[1-9]|1[012])[.](0[1-9]|[12][0-9]|3[01])[.](19|20)\d\d/ } 
  
  { ruleType: "text", pattern: /week-ends/,
   result: CustomTimeEvent("WeekEnd")  } 
   
  { ruleType: "text", pattern: /[\d]weeks/,
   result: CustomTimeEvent("Weeks")  }
   
  { ruleType: "text", pattern: /entire year/,
   result: CustomTimeEvent("Entire Year")  }
   
  
  